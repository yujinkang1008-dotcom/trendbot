🚀 최종 PRD: 멀티소스 인텔리전스 기반 트렌드 리서치 서비스

0. 서비스 개요
- 사용자가 키워드 입력만 하면, 검색량·뉴스/블로그·논문 데이터를 자동 수집
- Gemini 1.5 Flash로 요약·토픽 추출·감성 분석·자동 리포트 생성
- Streamlit UI에서 검색량 추이, 기사/논문 분석, 토픽 맵, 자동 리포트, 출처 자료를 한 화면에서 제공
- 목표: 사용자가 데이터를 “보는 것 → 이해하는 것 → 출처 확인”까지 끊김 없이 경험

1. 주요 기능
A. 검색 & 데이터 수집
- 키워드 입력(1~5개), 기본 기간 1년
- Google Trends(pytrends), Naver DataLab → 검색량/연관 검색어
- Google News RSS, Naver Search API → 뉴스/블로그
- arXiv API → 학술 논문

B. 분석 (AI & 데이터)
1) 검색 트렌드 분석
- 기간별 검색량 추이
- 연관 검색어 Top 10
- 검색어 순위 및 변동 추이
- 인구통계학적 분포 (연령, 성별, 디바이스)

2) 뉴스/블로그 분석
- 기사/포스트 건수 추이 (일/주 단위)
- Gemini 기반 감성 분석 (긍정/중립/부정 비율)
- 감성 추이 (시간 흐름별 변화)
- 주요 토픽/키워드 Top 10
- 기사 제목·본문 요약
- 피크 날짜 자동 탐지 → 대표 기사 목록 + Gemini 원인 요약

3) 학술 논문 분석
- 논문 건수 추이 (기간별 출판량)
- 연구 토픽 Top 10
- 논문 초록 요약
- 뉴스 vs 논문 토픽 비교 (공통/차이점 도출)

4) 토픽 클러스터링
- 뉴스+논문 키워드 임베딩 후 클러스터링(K-means/HDBSCAN)
- 각 클러스터별 대표 키워드, 대표 문서
- 성장률 계산(최근 빈도 vs 과거 빈도)

5) 자동 리포트 (Gemini)
- 핵심 이슈 Top 3
- 급상승 키워드 및 원인 설명
- 뉴스 담론 vs 학술 연구 비교
- 향후 전망/시사점 요약

C. 시각화
1) 검색량 추이
- 라인차트 (키워드별 1년간 검색량, 다중 키워드 비교 가능)

2) 연관 검색어 & 검색 순위
- 표: Top 10 연관 검색어 + 증감률
- 바 차트: 키워드 순위 변동

3) 기사/논문 건수 추이
- 이중축 라인차트 (뉴스 vs 논문 건수)
- 특정 시점 클릭 → 팝업: 관련 기사/논문 목록

4) 감성 분석
- 도넛 차트: 전체 긍·부정 비율
- 시계열 라인: 시간별 감성 변화

5) 토픽/태그
- 바 차트: Top 10 토픽 빈도
- 워드 클라우드: 키워드 강조

6) 토픽 클러스터링 맵
- 버블 차트:
  - 크기 = 언급 빈도
  - 색상 = 감성 스코어
  - Y축 = 성장률
- Hover 시 대표 키워드 & 문서 링크 표시

7) 뉴스 vs 논문 비교
- 벤다이어그램: 공통 토픽 / 독자 토픽
- 교차 표: 뉴스 Top 5 vs 논문 Top 5 비교

8) 출처 자료 카드
- 기사: 제목, 언론사, 발행일, 요약, 원문 링크
- 논문: 제목, 저자, 발행일, 요약, arXiv 링크
- 검색 데이터: “출처: Google Trends / Naver DataLab”

2. UI/UX 기획
- Header: 로고/제목, 키워드 입력창, 기간 선택, “분석하기” 버튼
- Main Body: 좌측(70%) 그래프/차트/토픽맵, 우측(30%) 자동 리포트+출처 자료 카드
- Footer: 출처 표기

3. UX 설계 포인트
- 투명성: 요약·차트에 출처 표시
- 탐색성: 그래프 클릭 시 관련 문서 열람
- 비교성: 키워드 최대 5개 비교
- 몰입감: 버블·워드클라우드 활용
- 자동화: 자동 리포트 생성

4. 기술 요구사항
- Python 3.11+
- 프론트엔드: Streamlit (2단 레이아웃)
- 데이터 수집: requests, feedparser, trafilatura, pytrends
- 분석: pandas, scikit-learn
- AI: Gemini 1.5 Flash, text-embedding-004
- DB: ChromaDB, SQLite
- 차트/시각화: matplotlib, plotly, altair, wordcloud
- 환경변수 관리: python-dotenv
  - 파일명: trendbot.env
  - 예시:
    GEMINI_API_KEY=...
    NAVER_CLIENT_ID=...
    NAVER_CLIENT_SECRET=...
    TZ=Asia/Seoul
  - 코드에서 load_dotenv("trendbot.env")로 로드

5. 개발 단계별 우선순위
- 1단계: 데이터 수집(Google/Naver/Arxiv) + 기본 시각화 + trendbot.env 적용
- 2단계: Gemini 요약/감성 + 감성/토픽 차트 + 출처 카드
- 3단계: 임베딩/클러스터링 → 토픽 맵, 피크 탐지, 자동 리포트
- 4단계: 뉴스 vs 논문 비교, 검색어 분포(연령/성별/디바이스), UI 고도화

6. 수락 기준 (테스트 시나리오)
- 키워드 입력 후 1년 검색량 라인차트 표시
- 기사/논문 건수 추이 동시에 표시
- 특정 피크 클릭 → 대표 기사/논문 + Gemini 원인 요약 표시
- 자동 리포트에 Top 이슈 3개 + 출처 포함
- 출처 카드 클릭 시 원문 새 탭 열림
- 데이터 없을 시 “결과 없음” 안내
